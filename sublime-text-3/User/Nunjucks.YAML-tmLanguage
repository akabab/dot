# [PackageDev] target_format: plist, ext: tmLanguage
name: Nunjucks
scopeName: source.nunjucks
fileTypes: [nunjucks, nunjs, html]
uuid: 0AAEDD0E-56AD-4B71-95C8-2FF271DE5B19

patterns:
- name: comment.block.nunjucks
  begin: '{% comment %}'
  end: '{% endcomment %}'

- name: comment.line.number-sign.nunjucks
  begin: '{#'
  end: '#}'

- name: storage.type.variable.nunjucks
  begin: '{{'
  end: '}}'
  captures:
    '0': {name: entity.tag.tagbraces.nunjucks}
  patterns:
  - include: '#template_filter'

- name: storage.type.templatetag.nunjucks
  begin: '{%-|{%'
  end: -%}|%}
  captures:
    '0': {name: entity.tag.tagbraces.nunjucks}
  patterns:
  - include: '#template_tag'
  - include: '#template_filter'

- name: meta.tag.any.html
  begin: (<)([a-zA-Z0-9:]++)(?=[^>]*></\2>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.html}
  end: (>)(<)(/)(\2)(>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
    '2': {name: punctuation.definition.tag.begin.html meta.scope.between-tag-pair.html}
    '3': {name: punctuation.definition.tag.begin.html}
    '4': {name: entity.name.tag.html}
    '5': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.preprocessor.xml.html
  begin: (<\?)(xml)
  end: (\?>)
  captures:
    '1': {name: punctuation.definition.tag.html}
    '2': {name: entity.name.tag.xml.html}
  patterns:
  - include: '#tag-generic-attribute'
  - include: '#string-double-quoted'
  - include: '#string-single-quoted'

- name: comment.block.html
  begin: <!--
  end: --\s*>
  captures:
    '0': {name: punctuation.definition.comment.html}
  patterns:
  - name: invalid.illegal.bad-comments-or-CDATA.html
    match: --
  - include: '#embedded-code'

- name: meta.tag.sgml.html
  begin: <!
  end: '>'
  captures:
    '0': {name: punctuation.definition.tag.html}
  patterns:
  - name: meta.tag.sgml.doctype.html
    begin: (?i:DOCTYPE)
    end: (?=>)
    captures:
      '1': {name: entity.name.tag.doctype.html}
    patterns:
    - name: string.quoted.double.doctype.identifiers-and-DTDs.html
      match: '"[^">]*"'
  - name: constant.other.inline-data.html
    begin: \[CDATA\[
    end: ']](?=>)'
  - name: invalid.illegal.bad-comments-or-CDATA.html
    match: (\s*)(?!--|>)\S(\s*)

- include: '#embedded-code'

- name: source.css.embedded.html
  begin: (?:^\s+)?(<)((?i:style))\b(?![^>]*/>)
  end: (</)((?i:style))(>)(?:\s*\n)?
  captures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.style.html}
    '3': {name: punctuation.definition.tag.html}
  patterns:
  - include: '#tag-stuff'
  - begin: (>)
    beginCaptures:
      '1': {name: punctuation.definition.tag.end.html}
    end: (?=</(?i:style))
    patterns:
    - name: comment.block.nunjucks
      begin: '{% comment %}'
      end: '{% endcomment %}'
    - name: comment.line.number-sign.nunjucks
      begin: '{#'
      end: '#}'
    - name: storage.type.variable.nunjucks
      begin: '{{'
      end: '}}'
      captures:
        '0': {name: entity.tag.tagbraces.nunjucks}
      patterns:
      - include: '#template_filter'
    - name: storage.type.templatetag.nunjucks
      begin: '{%'
      end: '%}'
      captures:
        '0': {name: entity.tag.tagbraces.nunjucks}
      patterns:
      - include: '#template_tag'
      - include: '#template_filter'
    - include: '#embedded-code'
    - include: source.css.nunjucks

- name: source.js.embedded.html
  begin: (?:^\s+)?(<)((?i:script))\b(?![^>]*/>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.script.html}
  end: (?<=</(script|SCRIPT))(>)(?:\s*\n)?
  endCaptures:
    '2': {name: punctuation.definition.tag.html}
  patterns:
  - include: '#tag-stuff'
  - begin: (?<!</(?:script|SCRIPT))(>)
    end: (</)((?i:script))
    captures:
      '1': {name: punctuation.definition.tag.end.html}
      '2': {name: entity.name.tag.script.html}
    patterns:
    - name: comment.block.nunjucks
      begin: '{% comment %}'
      end: '{% endcomment %}'
    - name: comment.line.number-sign.nunjucks
      begin: '{#'
      end: '#}'
    - name: storage.type.variable.nunjucks
      begin: '{{'
      end: '}}'
      captures:
        '0': {name: entity.tag.tagbraces.nunjucks}
      patterns:
      - include: '#template_filter'
    - name: storage.type.templatetag.nunjucks
      begin: '{%'
      end: '%}'
      captures:
        '0': {name: entity.tag.tagbraces.nunjucks}
      patterns:
      - include: '#template_tag'
      - include: '#template_filter'
    - name: comment.line.double-slash.js
      match: (//).*?((?=</script)|$\n?)
      captures:
        '1': {name: punctuation.definition.comment.js}
    - name: comment.block.js
      begin: /\*
      end: \*/|(?=</script)
      captures:
        '0': {name: punctuation.definition.comment.js}
    - include: '#php'
    - include: source.js

- name: meta.tag.structure.any.html
  begin: (</?)((?i:body|head|html)\b)
  end: (>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  captures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.structure.any.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.block.any.html
  begin: (</?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\b)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.block.any.html}
  end: (>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.inline.any.html
  begin: (</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.inline.any.html}
  end: '((?: ?/)?>)'
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.other.html
  begin: (</?)([a-zA-Z0-9:]+)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.other.html}
  end: (>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- include: '#entities'

- name: invalid.illegal.incomplete.html
  match: <>

- name: invalid.illegal.bad-angle-bracket.html
  match: <

repository:
  embedded-code:
    patterns:
    - include: '#ruby'
    - include: '#php'
    - include: '#python'

  entities:
    patterns:
    - name: constant.character.entity.html
      match: (&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)
      captures:
        '1': {name: punctuation.definition.entity.html}
        '3': {name: punctuation.definition.entity.html}
    - name: invalid.illegal.bad-ampersand.html
      match: '&'

  php:
    begin: (?=(^\s*)?<\?)
    end: (?!(^\s*)?<\?)
    patterns:
    - include: source.php

  python:
    name: source.python.embedded.html
    begin: (?:^\s*)<\?python(?!.*\?>)
    end: \?>(?:\s*$\n)?
    patterns:
    - include: source.python

  ruby:
    patterns:
    - name: comment.block.erb
      begin: <%+#
      end: '%>'
      captures:
        '0': {name: punctuation.definition.comment.erb}
    - name: source.ruby.embedded.html
      begin: <%+(?!>)=?
      end: -?%>
      captures:
        '0': {name: punctuation.section.embedded.ruby}
      patterns:
      - name: comment.line.number-sign.ruby
        match: (#).*?(?=-?%>)
        captures:
          '1': {name: punctuation.definition.comment.ruby}
      - include: source.ruby
    - name: source.ruby.nitro.embedded.html
      begin: <\?r(?!>)=?
      end: -?\?>
      captures:
        '0': {name: punctuation.section.embedded.ruby.nitro}
      patterns:
      - name: comment.line.number-sign.ruby.nitro
        match: (#).*?(?=-?\?>)
        captures:
          '1': {name: punctuation.definition.comment.ruby.nitro}
      - include: source.ruby

  string-double-quoted:
    name: string.quoted.double.html
    begin: '"'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: '"'
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    patterns:
    - include: '#embedded-code'
    - include: '#entities'

  string-single-quoted:
    name: string.quoted.single.html
    begin: ''''
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: ''''
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    patterns:
    - include: '#embedded-code'
    - include: '#entities'

  tag-generic-attribute:
    name: entity.other.attribute-name.html
    match: \b([a-zA-Z\-:]+)

  tag-id-attribute:
    name: meta.attribute-with-value.id.html
    begin: \b(id)\b\s*(=)
    end: (?<='|")
    captures:
      '1': {name: entity.other.attribute-name.id.html}
      '2': {name: punctuation.separator.key-value.html}
    patterns:
    - name: string.quoted.double.html
      contentName: meta.toc-list.id.html
      begin: '"'
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.html}
      end: '"'
      endCaptures:
        '0': {name: punctuation.definition.string.end.html}
      patterns:
      - include: '#embedded-code'
      - include: '#entities'
    - name: string.quoted.single.html
      contentName: meta.toc-list.id.html
      begin: ''''
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.html}
      end: ''''
      endCaptures:
        '0': {name: punctuation.definition.string.end.html}
      patterns:
      - include: '#embedded-code'
      - include: '#entities'

  tag-stuff:
    patterns:
    - include: '#tag-id-attribute'
    - include: '#tag-generic-attribute'
    - include: '#string-double-quoted'
    - include: '#string-single-quoted'
    - include: '#embedded-code'

  template_filter:
    patterns:
    - name: keyword.control.filter.nunjucks
      match: (add|addslashes|capfirst|center|cut|date|default|default_if_none|dictsort|dictsortreversed|divisibleby|escape|escapejs|filesizeformat|first|fix_ampersands|floatformat|force_escape|get_digit|iriencode|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|ljust|lower|make_list|phone2numeric|pluralize|pprint|random|removetags|rjust|safe|safeseq|slice|slugify|stringformat|striptags|time|timesince|timeutil|title|truncatewords|truncatewords_html|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|yesno|apnumber|intcomma|intword|naturalday|ordinal|STATIC_PREFIX)\b
    - name: storage.type.attr.nunjucks
      begin: :"|"
      end: '"'
    - name: storage.type.attr.nunjucks
      begin: :\'|\'
      end: \'
    - name: string.unquoted.filter-pipe.nunjucks
      match: \|
    - name: string.unquoted.tag-string.nunjucks
      match: '[a-zA-Z0-9_.]+'

  template_tag:
    patterns:
    - name: keyword.control.tag-name.nunjucks
      match: \b(autoescape|endautoescape|block|endblock|blocktrans|endblocktrans|trans|plural|debug|extends|filter|firstof|for|empty|endfor|if|elif|else|endif|include|ifchanged|endifchanged|ifequal|endifequal|ifnotequal|endifnotequal|load|from|low|regroup|ssi|spaceless|endspaceless|templatetag|widthratio|with|endwith|csrf_token|cycle|url|lorem|thumbnail|endthumbnail|get_static_prefix)\b
    - name: keyword.operator.nunjucks
      match: \b(and|or|not|in|by|as)\b
